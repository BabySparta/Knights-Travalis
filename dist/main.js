(()=>{"use strict";const e=new Map,s=(t,o)=>{const a=t,c=o;let l;const d=[[1,2],[1,-2],[2,1],[2,-1],[-1,2],[-1,-2],[-2,1],[-2,-1]],n=()=>l,r=e=>{l=l||e},i=()=>d.map((e=>h(e[0],e[1]))).filter((e=>void 0!==e)),h=(e,t)=>{const[o,l]=[a+e,c+t];if(0<=o<8&&0<=l<8)return s(o,l)},u=()=>`[${t}, ${o}]`;if(e.has(u()))return e.get(u());{let s={name:u,getPredecessor:n,setPredecessor:r,getMoves:i};return e.set(u(),s),s}};((e,t)=>{const o=s(4,4),a=s(6,2),c=[o];for(;!c.includes(a);){const e=c.shift(),s=e.getMoves();s.forEach((s=>s.setPredecessor(e))),c.push(...s)}const l=[a];for(;!l.includes(o);){const e=l[0].getPredecessor();l.unshift(e)}console.log(`The shortest path is ${l.length-1} moves!`),console.log("The moves are:"),l.forEach((e=>{console.log(e.name())}))})(),function(){const e=document.querySelector(".board");for(let s=0;s<8;s++){let t=document.createElement("div");for(let e=0;e<8;e++){let o=document.createElement("div");s%2==0?e%2==0?o.classList.add("white"):o.classList.add("black"):e%2==0?o.classList.add("black"):o.classList.add("white"),o.dataset.originalColor=o.classList,o.classList.add("cell"),o.dataset.row=s,o.dataset.column=e,o.dataset.x=e,o.dataset.y=7-s,t.appendChild(o)}t.classList.add("row"),e.appendChild(t)}}()})();