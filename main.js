(()=>{"use strict";const e=new Map,t=(o,s)=>{const n=o,c=s;let r;const l=[[1,2],[1,-2],[2,1],[2,-1],[-1,2],[-1,-2],[-2,1],[-2,-1]],d=()=>r,i=e=>{r=r||e},a=()=>l.map((e=>h(e[0],e[1]))).filter((e=>void 0!==e)),h=(e,o)=>{const[s,r]=[n+e,c+o];if(0<=s<8&&0<=r<8)return t(s,r)},u=()=>`[${o}, ${s}]`;if(e.has(u()))return e.get(u());{let t={name:u,getPredecessor:d,setPredecessor:i,getMoves:a};return e.set(u(),t),t}};((e,o)=>{const s=t(4,4),n=t(6,2),c=[s];for(;!c.includes(n);){const e=c.shift(),t=e.getMoves();t.forEach((t=>t.setPredecessor(e))),c.push(...t),console.log("hi")}const r=[n];for(;!r.includes(s);){const e=r[0].getPredecessor();r.unshift(e)}console.log(`The shortest path is ${r.length-1} moves!`),console.log("The moves are:"),r.forEach((e=>{console.log(e.name())}))})(),function(){for(let e=0;e<64;e++){const t=document.createElement("div");t.classList.add("cell"),t.textContent=e+1,document.querySelector(".board").appendChild(t)}}()})();